window.store = {"index.html": {"url": "index.html", "title": "Overview", "content": " IPP Overview Get Ready Understanding users Use cases, usability, goals and principles Frameworks Reflections First sketch From LoFi to HiFi Style a prototype Improving interactions Paper prototyping HiFi Prototyping LoFi Web App HiFi Web App Thinking Aloud Heuristic Analysis Qualitative Evaluation Quantitative Evaluation M1 Presentation M2 Presentation M3 Presentation M4 Presentation Final Evaluation Final Presentation Analysis Basics Design Basics Implementation Basics Evaluation Basics Schedule Summary 2020 04.11.20: Team assignment / Course introduction / Set up 11.11.20: Discussion of ideas 18.11.20: Group work 25.11.20: Deadline iteration 1 + milestone presentation 1 02.12.20: Group work 09.12.20: Deadline iteration 2 + milestone presentation 2 16.12.20: Group work 23.12.20: Deadline iteration 3 + milestone presentation 3 2021 13.01.21: Group work 22.01.21: Deadline iteration 4: milestone presentation 4 27.01.21: Freeze of GitHub: finalization of prototype 03.02.21: Questions & answers 10.02.21: Deadline final evaluation + final presentation Next: Expectations <!-- --> includeHTML(); <!-- Task bundle 1 Task sidebar Checkmarks for progress Footer https://css-tricks.com/snippets/css/sticky-footer/ Task bundle 2 Framework, color theory content on website Content new (evaluation/design) Read scripts Spiral und schedule light version, Re-check color combinations 3:1 contrast spiral tooltips complete Task bundle 3 favicon 404 page https://docs.github.com/en/github/working-with-github-pages/creating-a-custom-404-page-for-your-github-pages-site Implementation, Expectation Fix cookie bug (theme/task checkboxes) Task bundle 4 #TODO: WIP Get search to work with Lunr (https://davidwalsh.name/adding-search-to-your-site-with-javascript),https://learn.cloudcannon.com/jekyll/jekyll-search-using-lunr-js/, https://rahmanfadhil.com/lunr/ Spiral high quality #TODO: Arrow different direction if accordion open #TODO: Quicklink to current iteration (with current tasks) Task bundle 5 #TODO: Spiral, schedule, GitHub img, goal directed design, it3 style prototype dark #TODO: Videos #TODO: Link slides as pdf? --> "}, "pages/general/grading.html": {"url": "pages/general/grading.html", "title": "Expectations", "content": " IPP Expectations Introduction The team project aims to freely design and prototype an interactive mobile application in HTML/CSS/JavaScript. You will work in five iterations (with corresponding milestones). Throughout each iteration, you will follow the user-centered design process. This design process includes analysis, design, implementation and evaluation. Prototype functionalities will be freely and independently designed by your team, depending on your creativity in brainstorming, the gathered user and usability requirements, as well as your use cases and scenarios. The user will be able to perform interactions, for example: buying, listing, viewing, informing, playing, searching. Note: The course focuses on interaction prototyping. Even if your required/specified feature is not fully functional, you can simulate it and work on evaluating the corresponding user interface. General information on the practical course All the tasks during this project phase will be group exercises (groups of persons). We recommend that every team member practices and contributes to the implementation part of the exercises. Establish interdisciplinary teams for working on your prototype. Find a name four your group. Each of the five iterations is planned for a duration of two weeks. Please ensure that you have pushed solutions for all exercises to GitHub at the end of the iteration. Your repository will be https://github.com/interactionprototyping/GROUP, where GROUP is your group's chosen name. Set up a suitable file and folder structure; please indicate in the README.md, where your current version of your prototype can be found. Document your implementational and methodological progress/process throughout the whole project in a brief, but suitable manner (beginning at the first iteration) on GitHub. This documentation will be taken into account for your final grade and will simplify the final project presentation, as you have already structured your results. By using the history functionality of GitHub, you may furthermore return to earlier versions of your prototype. Expectations, requirements, and grading Final Grade Your final grade will consist of a methodology (50%, documentation and final presentation) and an audit of your prototype (50%, ergonomics and HTML). The methods part (documentation and final presentation) depicts your correct application of appropriate usability engineering methods. Do not only apply methods that have been presented or mentioned in class, rather read on and involve other methods you know or have read about. There are not \u201ccorrect\u201d or \u201cincorrect\u201d methods, so document the reasons for selecting or disregarding specific ones (both in your milestone and poster presentations). Document the results and insights they provided. The maximum credits can be reached based on the following expectations (in descending importance): Methodology The prototyping process is performed using a very structured approach. The choice of usability and user centered design methods are clearly motivated and correctly applied. More than the given methods were used. Iterations of the process phases are clearly visible. Results The selected evaluation outcomes are important and presented in a structured and clear way. The outcome of the evaluation is linked to concrete design improvements of the prototype. The results are discussed using the usability requirements as well as other appropriate criteria. Both evaluation outcomes as well as the implications for your prototype are critically discussed. Creativity The developed prototype is innovative and original. References The design and methodology choices are supported using literature (i.e. correct sources of the methods that have been applied), appropriate guidelines, design rules, or design patterns. Tools Various and multiple modeling/prototyping tools (paper, software) are used. The different provided tools are used appropriately. The prototyping part (i.e. the code audit) of your grade will consist of the assessed functionality and interactive behavior of your prototype. The maximum credits can be reached based on the following expectations (in descending importance): Usability The prototype follows (not only the established) usability, readability and clarity rules (heuristics, patterns and guidelines). No usability bugs are present and found in the code audit. Techniques There is a very clean HTML structure. CSS is used accurately. The app stays on one page. The prototype relies heavily on JS and jQuery or other JS frameworks. Data is stored in objects. Interface components or APIs are used. Code is structured, reused and commented. Functionality Basic established use-cases (e.g., in case of a music app, playing any song in the library, or compiling arbitrary playlists) are functional. Level of Detail The created interaction allows a high (horizontal or vertical) capability. More than the tested experimental paths are implemented. \"Experiencing\" the app is possible in all program sections. Next: Ideas includeHTML(); "}, "pages/general/ideas.html": {"url": "pages/general/ideas.html", "title": "Brainstorm ideas for an interactive mobile application", "content": " IPP Brainstorm ideas for an interactive mobile application An exemplary procedure Make a Mind Map of ideas for an interactive mobile application. By interactive, stress is on the interaction between the application and the user, rather than on the application functionality. Think of new and innovative ways how a mobile application can be used, write these down and create a Mind Map. Either make a hand drawn (take a photo) or a software based (see below) Mind Map. The primary objective of this mind mapping process is to come up with a application prototype that has both features and functionality. More information regarding features and functionality can be found in Section 2.1 of Nielsen's Guerrilla HCI . As you will see, features are referred to as the horizontal component of prototyping and functionality is the vertical component. The goal of this course is for you to have a broad understanding of the horizontal features (viz. interaction) and to, by the end of the course, have implemented a limited set of the vertical functionality (also, interaction). Generate ideas and select the best ones According to the creative problem solving process (and general brainstorming rules), strictly separate the two phases convergent (idea generation) and divergent (idea evaluation) thinking. Divergent thinking means a \"broad search for many diverse and novel alternatives\". Convergent thinking means a \"focused and affirmative evaluation of alternatives\". Separating those phases ensures, that you explore the topic broadly, consider all relevant factors, and find new alternatives. Further reading Guerrilla HCI by Jakob Nielsen, online article Brainstorming from Wikipedia Basic rules for divergent thinking are: Defer judgement Avoid any form (positive or negative), even thought, and defer to convergent phase. Strive for quantity Generate many options to get the chance of finding good options. Whether an option is good or bad is judgment and therefore deferred. Seek wild ideas \u201cWild and crazy\u201d or \u201cchildish\u201d ideas have great potential, even if it\u2019s easier to develop than to implement! Make connections / build on other ideas Combine and further develop existing elements, as thoughts are springboards for creating alternatives. Basic rules for convergent thinking are: Apply affirmative judgment Search for value instead of problems, this creates a positive attitude towards new (never perfect) ideas and their realization. Be deliberate Dedicate time to judging option, consider options and check against criteria. Check your objectives Options are answers to a question, always check the original question and whether or not an idea is on target. Keep novelty alive New options are created also because existing solutions are not satisfactory, so always consider the novelty of an option. Improve ideas An idea is a seed that needs time and care. Keep in mind to develop them further. Apply creativity techniques or creative thought processes for both divergent (e.g. brainstorming, ...) and convergent (e.g. telescoping, COCD Box, ...) phases (a good summarizing book is \"Thinking tools for creativity and innovation\" by Florian Rustler). Useful tools are post-its and glue dots. Further reading Creativity techniques from Wikipedia Creative thought processes from Wikipedia Thinking tools for creativity and innovation by Florian Rustler, book Mind mapping Mind mapping is a technique that can assist the process and document the results of a brain storm session. Read the mind mapping introduction on wikihow, which gives you a short description of the basics of the mind mapping technique. The website \"Mind mapping software blog\" goes into more detail on how to improve your mind map using color, keywords and images. There are many free mind mapping tools you can use. One of them is FreeMind, which is a software written in Java that can be freely downloaded. Further reading How to make a mindmap by Paul Chernyak (wikihow), online article Increase the visual impact of your mind maps with images and colorby Chuck Frey, online article Tool FreeMind Detailed description of three ideas Provided a more detailed description of three ideas that came up in the brainstorm. Describe the goal, functionality, and target group of the application. After considering all three options, pick a favourite one that you would like to develop further. Task Prepare a short Powerpoint of your different ideas for the next session. Next: Setup Introduction includeHTML(); "}, "pages/general/set_up_client.html": {"url": "pages/general/set_up_client.html", "title": "The GitHub client - a graphical user interface for Git", "content": " IPP The GitHub client - a graphical user interface for Git Here we will explain how you can setup and work with the GitHub client in 3 easy steps. However, there are alternative approaches. If you as a team are more comfortable using other types of interfaces to work with Git, feel free to use those. Step 1: Create your local repository After installing and logging in to GitHub, you are ready to work with the Windows/Mac Client of GitHub. To advance the usability of working with Git as online cloud memory with several addons, you usually won\u2019t need any commands in this GUI. Below you\u2018ll find some views of the GitHub GUI in different modes. Start by cloning (press the icon) your group\u2019s online repository and choose a folder, where you want your local workspace to be. You\u2019ll now find your local repository overview in the left menu: This shelters all the additional functionalities, which GitHub provides. For example, you can now start editing the files in your working directory. Therefore right-click the repository and select Open in Explorer. There you can add files or edit the existing ones. Step 2: Commit Whenever a file is modified, you can create a commit (\u201csnapshot\u201d of your current project state). The GitHub client recognizes and summarizes the changes in the area \"uncommitted changes\", in the right area you will see all the changes in the files (and their differing content): You simply need to enter some text which describes your modifications (important for your teammates, e.g. \u201cFunctionality X improved\u201d or \u201cBug Y fixed\u201d) and press the commit button: Step 3: Push Before your edit appears online, you also need to push your changes from your local repository to the online repository. Instead of pushing/pulling, GitHub offers a synchronization of the online and local repositories. Simply press the corresponding button: You can explore the different revisions (or \u201csnapshots\u201d) by clicking the different commits in your history. There you get a view of the differences (added/removed code for each file) and the possibility of reverting changes: What if something goes wrong: Reverting and conflicts Imagine you made a commit in the past and later on in your project you realize: this was not, what you wanted to do. Git simply gives you the possibility, to revert a single commit in the past: Select the commit, you want to revert (in the history). Press the button (this is only possible, if all pending changes where committed), you now have to commit/sync the revert. If two (or more) persons modified a file simultaneously, this will result in a conflict which you need to resolve by merging. Github will amend the conflicting file with conflict markers: The marker for a starting conflict is , while the end of the conflict is marked with >>>>>>. The two versions are separated by =======. Open the conflicting document with an editor of your choice (e.g. Brackets) and resolve the conflict by deleting the unwanted version and the markers. A file could look like this: <<<<<<< HEAD Here is your change ======= Here is another conflicting change >>>>>>> origin/gh-pages Once you resolved the conflict, commit the merged file (don't forget to select it by clicking in GitHub in the \"Files to commit\" area). Hint: A good method to try to avoid merge conflicts is for each team member to work on separate pages or functionalities of the app (as long as this approach makes sense for your specific app). Branches There is a concept called \u201cbranches\u201d in GitHub, those are used for allowing a parallel workflow of multiple application versions in big software projects. Basically, one would create a copy of the existing application (create a branch), improve the functionality (without altering the main project branch, called the master branch), and once the functionality is there, discuss it and finally merge it to the master branch. For the interaction prototyping course, it\u2019s sufficient if you stay in the master branch (for private documents like tests, presentations, evaluation, \u2026) or in the gh-pages branch (for the development of your application, which then will be publically available in the internet). Keep in mind: the latter branch is publically available in the internet. You need to select the appropriate branch in the top bar of your GitHub client: Ready, steady, go! Find further information by reading the GitHub tutorials. Create an arbitrary HTML document in your cloned repository. Provoke a conflict: multiple authors are editing this HTML document and synchronizing changes. Try to resolve the conflicts by merging the edits. Try to revert to an earlier version. Discuss with your tutors: What is a commit, a synchronization, and a branch? Helpful links Git \"branches\" explanation GitHub Tutorials Next: Setup Development Environment includeHTML(); "}, "pages/general/set_up_commands.html": {"url": "pages/general/set_up_commands.html", "title": "Git Commands", "content": " IPP Git Commands \"History is written by those who push first\" Git is separated into four levels: workspace/ working directory, index, local repository, and online repository. The Git commands allow to organize these four levels to realize the high functionality of Git. A few important commands are explained in the following graphic. Workspaces, branches, index, history, repository The following list briefly explains the concepts. Items marked with * are the levels, we're going to work with during the course. Workspace* The workspace is the actual folder on your computer, within you make your modifications. Index As kind of a meta-level, the index isn\u2018t directly visible or editable. Before commiting your modifications, GitHub creates this index, which will be posted to your local repository. Local & Online Repository* These repositories are the \u201ccontainers\u201c, where your project is stored. After all synchronisation, both repositories, online and offline, are all the same. Branches Working with branches allows to test different versions of one commit. If you are not sure, which possibility might be the best one, you simply set up another branch und implement both versions at the same time. After you made your choice, you have the possibility to merge the commits from the two branches. In order to access your HTML/CSS/JS prototype directly as a www app (contrary to inspecting the code in the www), you need to use the branch gh-pages. History* With the history function of Git and GitHub, it is possible to revert a single commit in the past or to roll back the whole project to a selected point. Basic Git Commands The following basic commands are necessary: Commit Commit a file to bring it under versioning control (you can later revert to this revision or compare differences) Push Push a file to bring it online (available for other team members) Checkout Checkout of a file brings it back to your workspace in a certain version (available for inspection and modification) Pull Pull a file to bring it from the online repository to your local workspace. Advanced Git Commands When using the GitHub GUI, you will find several buttons, which are not classic Git commands. These buttons often unite a few commands to one action that performs a special and necessary task. Again, items marked with * are the levels, we're most likely going to work with during the course. Sync* The snyc action unites the commands add, commit, push, fetch and checkout. By syncing your local repository, you do load the latest version of the online repo while updating the online version with your commits. Revert* The revert action creates a new commit that reverts all changes up to the selected commit (this means, the revert is also revertable). Roll-back The roll-back action reverts all changes that were committed after the selected commit. This is not reversible! Next: Setup GitHub Client includeHTML(); "}, "pages/general/set_up_development.html": {"url": "pages/general/set_up_development.html", "title": "Set up the development environment", "content": " IPP Set up the development environment The device Get one phone (Nexus 5X) per team: for collecting it in room MW3304 (Lorenz Prasch), bring your ID card or passport. One team member needs to sign the lending and will be responsible for the phone until return at the end of the semester. The environment Set up an environment for creating HTML documents on your computer: Recommended Editor: Visual Studio Code Recommended Browser: Chrome Create a HTML page (e.g. the HTML skeleton in the slides) with some elements (headline, paragraphs \u2026) and open it in your browser. Access the Chrome developer tools and inspect the elements in your document. Activate the device emulation (Nexus 5X): Hint: If you have not already set up eduroam, do so for this project. Helpful links Visual Studio Code Google Chrome Tutorial: Opening a html page in a browser Setting up eduroam Starting the app You can now make your HTML accessible via github.io, a web server publishing all documents you have in the GitHub branch gh-pages. Go to your project repository: https://github.com/interactionprototyping/GROUP (where GROUP is your group's chosen name) Create a gh-pages branch, which is used to publish your site: Make gh-pages your default branch (go to , right side): The files, you commit to this branch, are published under http://interactionprototyping.github.io/GROUP/FILE.html (where GROUP is your group name and FILE the filename of the document you committed). Convention: If you name your application\u2019s starting page index.html, you don\u2019t need to enter a filename in your browser: typing http://interactionprototyping.github.io/GROUP will then be enough. You can access these files in your phone\u2019s browser. Wait five minutes for the first usage after setting up gh-pages. Next: Analysis includeHTML(); "}, "pages/general/set_up_intro.html": {"url": "pages/general/set_up_intro.html", "title": "Introduction", "content": " IPP Introduction Join Mendeley The literature presented in class and used in these exercises is available in the Mendeley Interaction Prototyping group, which you should join. There is a desktop client of Mendeley. Many of the papers and books are available online (inside the university network). You can also find papers or books through the university's eAccess. Helpful links Mendeley Interaction Prototyping group Mendeley Desktop Client TUM eAccess Join GitHub Choose a group name for your team. Each team member needs to set up a GitHub environment: Create free GitHub account Send your GitHub user names and your group's chosen name to You will be given access to the repository https://github.com/interactionprototyping/GROUP, where GROUP is your chosen name. Download and install the Windows or Mac client. Clone the gh-pages branch of your repository. Find instructions on this below. Helpful links \"What is github?\" (video) GitHub new account GitHub desktop client GitHub benefits GitHub is an online cloud service (online storage) which simplifies collaboration in IT projects. It is based on the software Git. The combination provides tools for solving conflicted versions of a file, merging different edits in the same document and backing up your project. The benefits of GitHub are threefold: Version control (all code revisions are stored, you can jump back) Collaboration (your team can work together on the code) Cloud (your app is stored in the internet and can be accessed via smartphones) Next: Setup Git Commands includeHTML(); "}, "pages/tasks/M1_first_sketch.html": {"url": "pages/tasks/M1_first_sketch.html", "title": "First sketch", "content": " IPP First sketch Further reading Norm Catalog (access through TUM Login) by Perinorm, website Contrast Checker by WebAIM, website Next: LoFi Paper Prototyping ToDo-list iteration 1 Qualitative evaluation Personas Screen images Usability report Presentation M1 includeHTML(); "}, "pages/tasks/M1_paper.html": {"url": "pages/tasks/M1_paper.html", "title": "LoFi Paper Prototyping", "content": " IPP LoFi Paper Prototyping Using Nielsen's (2012) Usability 101, create sketched early stage vertical prototypes on paper of (more than five) different views of your interactive application that address your analysis and design stages. Further reading Usability 101 by Jakob Nielsen, online article Paper Prototyping by Jakob Nielsen, online article Task 3 Upload your screen images to a folder iteration-1/prototype in the GitHub master branch. Next: Thinking Aloud ToDo-list iteration 1 Qualitative evaluation Personas Screen images Usability report Presentation M1 includeHTML(); "}, "pages/tasks/M1_presentation.html": {"url": "pages/tasks/M1_presentation.html", "title": "Presentation M1", "content": " IPP Presentation M1 You will demonstrate your methodological findings and your early stage prototypes during the next Interaction Prototyping session. Prepare a 10 minute presentation on your approach and the corresponding results, covering all the work done in the first iteration. Don\u2019t necessarily proceed task-by-task, but rather tell a methodological story (why you chose certain methods, techniques or tools). Demonstrate the work in progress and formulate questions to debate with the experts in the plenary during a 10 minute discussion. Task 5 Upload your presentation (.ppt or .pdf) to a folder iteration-1/presentation on the GitHub master branch. Next: Goals and design principles ToDo-list iteration 1 Qualitative evaluation Personas Screen images Usability report Presentation M1 includeHTML(); "}, "pages/tasks/M1_research.html": {"url": "pages/tasks/M1_research.html", "title": "Research and interviews", "content": " IPP Research and interviews Interview methods Who to interview (see Cooper et al., 2014, p. 46) What different sorts of people might use this product? How might their needs and behaviors vary? What ranges of behavior and types of environments need to be explored? Interview tips Transparency/ traceability is important Record the interview in order to assure conclusions can be reproduced Be curious but reticent Your own opinion should not be evident to the interviewee Don\u2019t ask suggestively Ask open questions and listen actively Further reading Inclusive Toolkit by Microsoft, pdf Guerrilla HCI by Nielsen (1994), paper Go beyond user interviews with contextual inquiry by Patrick Thornton, online article 10 moderating tips for focus groups by Lisa Boughton, online article Focus Groups by TED-ed, video Video examples \"Moderating focus groups\" by Richard Krueger \"Example of Laddering with hints and tips\" by Joanna Chrzanowska Observation Before you get started, take the time to get to know your users. Use a qualitative research method or a combination of methods of your choosing with at least 5 participants to better understand your target group. Some ideas (to which you are, however, not limited) include: A (structured) interview with your participants to find out about their wishes, and ideas as well as potential problems, features, etc. You could also draw inspiration from Microsoft's Inclusive Design Toolkit. A thinking aloud experiment (Nielsen, 1994) or contextual inquiry, if a similar application already exists. A diary study over the course of a few days, in order to obtain longitudinal data. A diary study over the course of a few days, in order to obtain longitudinal data. Further reading Diary Studies: Understanding Long-Term User Behavior and Experiences by Kim Flaherty, online article Observer Guidelines for Usability Research by Susan Farrell, online article Product Development Process: Observation by David M. Kelley, video Analysis User Goals and Personas Create 3 personas based on your contextual inquiry or interview. Specify user goals linking the personas you created and the information from your contextual inquiry or interview. The goals of the personas are a tool to derive the functionality that is expected of the application. The functionalities should fullfill the users' goals. Focus for this practical course on the experience and end goals of the user. You can also familiarize yourselves with the Jobs-To-Be-Done framework, a relatively new technique that focuses on user needs. This approach has grown in prominence in recent years, and can be used complimentary or as an alternative to personas. Scenarios Write user scenarios (narrative) in which the personas use your mobile app. Use the personas to come up with scenarios in which the app is utilized. Further reading Chapter 5: Modeling Users: Personas and Goals by Cooper (2007), book chapter in About Face 3 Chapter 6: The Foundations of Design: Scenarios and Requirements by Cooper (2007), book chapter in About Face 3 Personas by Usability.gov, online article Personas vs. Jobs-to-Be-Done by Page Laubheimer, online article Creating Personas Is Like Sorting Rocks by NNGroup, video Why personas fail by Kim Flaherty, online article Templates Personas by Tony Ho Tran Jobs to be done by Tony Ulwick Jobs to be done 2 by Mural Tasks 1 & 2 Summarize the results of your qualitative research (not more than 1 page) in a folder iteration-1/user-research in the GitHub master branch. Document your personas and scenarios (e.g. in .ppt) in a folder iteration-1/user-research in the GitHub master branch. Next: First sketch ToDo-list iteration 1 Qualitative evaluation Personas Screen images Usability report Presentation M1 includeHTML(); "}, "pages/tasks/M1_thinking.html": {"url": "pages/tasks/M1_thinking.html", "title": "Thinking Aloud", "content": " IPP Thinking Aloud Run a thinking aloud experiment, as per Nielsen\u2019s (1994) paradigm Discount Usability Engineering (a small group of 2-5 persons is sufficient). An important rule is established in Pereyra's (2015), principle 10: \"Don't grade your own homework\". In 10 steps to engaging user experience: involve users as subjects, you\u2019ve not asked yet! Record the evaluation in a suitable manner and discuss usability issues and possible improvements. Further reading Guerrilla HCI: Using discount usability engineering to penetrate the intimidation barrier by Jakob Nielsen (1994), paper 10 steps to engaging user experience by Irene Pereyra, paper The 20 UX tips you need to know by Jamie Shanks, online article Task 4 Upload a short usability report including your conclusions (not more than 1 page) to a folder iteration-1/thinking-aloud in the GitHub master branch. Next: Presentation M1 ToDo-list iteration 1 Qualitative evaluation Personas Screen images Usability report Presentation M1 includeHTML(); "}, "pages/tasks/M2_from_LoFi_to_HiFi.html": {"url": "pages/tasks/M2_from_LoFi_to_HiFi.html", "title": "From LoFi to HiFi", "content": " IPP From LoFi to HiFi Apply your knowledge gained from analyzing UML, usability requirements and goals, as well as the principles: Put to the side your paper prototype from the first iteration and redraw it using what you have learned (e.g., principles). Do not fear fear - just do it; \"the chance of you hitting the bulls eye with you first shot is very slim\" (Pereyra). Also use the findings from your evaluation of the first iteration. To see why this is important, see \"Paper prototyping\" according to the Nielson Norman Group. Further reading User Interface Design patterns by UI Patterns, website Little Big Details by Floris Dekker, blog App Dissection by Brian Lovin, blog Design Details by Brian Lovin & Marshall Bock, podcast Task 7 Upload your screens iteration-2/design in the GitHub master branch. Next: HiFi Prototyping ToDo-list iteration 2 UML use-cases Requirements, usability goals and principles New screen images POP prototype Heuristic evaluation Presentation M2 includeHTML(); "}, "pages/tasks/M2_goals.html": {"url": "pages/tasks/M2_goals.html", "title": "Goals and design principles", "content": " IPP Goals and design principles Use cases (UML) Specify your application functional requirements based on your personas and goals in a formal way. Use UML Use Case Diagrams (see Chapter 2 Miles, 2006) to describe the functional requirements of your application (e.g., buying, listening, rating, searching). Consider paths from starting the app until performing a certain action/goal (for example, in case of a music application, listening to a specific track). Consider deviations from that path (like, for a music application, \"music not found\", \"music not offline available\", or \"song preview\"). Ensure that the requirements match different application functionalities (e.g. media library, media store, playback functionalities). These are of course dependent on the original idea of the app. Use a graphic tools of your choice or an online tool like Creately (register for saving or take a screen shot) Further reading Chapter 2: Modeling Requirements: Use Cases by Russ Miles & Kim Hamilton, book chapter in Learning UML 2.0 Templates UML diagrams by Creately Task 6.1. Document (e.g. in .ppt) your UML use-cases in a folder iteration-2/Analysis in the GitHub master branch. Usability requirements and goals Use your scenarios to create usability requirements and goals. The functional requirements you have already defined in the UML use cases. Check if these requirements are fullfilled with your current prototype. Feel free to adjust your requirements if needed. Note that, usability goals are user oriented and operationally defined. Further reading Chapter 6: The Foundations of Design: Scenarios and Requirements by Cooper (2007), book chapter in About Face 3 Principles Search and familiarize yourself with a set of suitable design principles that reflect the usabilty requirements and goals you specified above. Do not just (or worse: define as not applicable) the buzz-phrased principles, rather read them (and their sub-categories) in detail. It is suggested to orientate yourself to the Nielsen's 10 Usability heuristics, and read other rules as information. Further reading Chapter 5: Usability Heuristics by Nielsen (1993), book chapter in Usability Engineering Chapter 8: Synthesizing Good Design: Principles and Patterns by Cooper (2007), book chapter in About Face 3 8 golden rules of Interface Design by Shneiderman, online article First Principles of Interaction Design by Tognazzini, online article Task 6.2. Document (e.g. .ppt) your (new) requirements, usability goals and exemplify how the principles were accounted for and improvements needed in a folder iteration-2/analysis in the GitHub master branch. Discuss them with your tutors. Next: From LoFi to HiFi ToDo-list iteration 2 UML use-cases Requirements, usability goals and principles New screen images POP prototype Heuristic evaluation Presentation M2 includeHTML(); "}, "pages/tasks/M2_heuristic.html": {"url": "pages/tasks/M2_heuristic.html", "title": "Heuristic Analysis", "content": " IPP Heuristic Analysis Do a heuristic usability evaluation of the POP prototype from your your partner group (another team in this course) as experts using the template we provide. Again consider Nielsen\u2019s (1994) paradigm Discount Usability Engineering, as well as Nielsen's collection of information on Heuristic Evaluations. Details can be found in Nielsen's (1993, chapter 5.11). Further reading Guerrilla HCI: Using discount usability engineering to penetrate the intimidation barrier by Jacob Nielsen (1994), paper Heuristic Evaluation by Norman Nielsen Group, various online articles Usability Engineering Chapter 5.11: Heuristic Evaluation by Jakob Nielsen, book chapter Templates Heuristic Evaluation template (based on Nielsen's 10 heuristics) Task 9 Deadline: Upload the evaluation report in a folder iteration-2/heuristic-evaluation in the GitHub master branch. Offer your evaluation and feedbacks to your partner group (another team in this course) to conduct the Task 14 Next: Presentation M2 ToDo-list iteration 2 UML use-cases Requirements, usability goals and principles New screen images POP prototype Heuristic evaluation Presentation M2 includeHTML(); "}, "pages/tasks/M2_hifiPrototyping.html": {"url": "pages/tasks/M2_hifiPrototyping.html", "title": "HiFi Prototyping", "content": " IPP HiFi Prototyping Create a prototype with the software POP - Prototyping on Paper with more details and interactions based on the define functional requirement in the UML in Task 6 and the improved screens in Task 7. This prototype will be regarded as the \"hi-fi paper prototype\", which includes most of the design features and interaction concepts of the app. Task 8 Deadline: Upload your sharing URL of your POP prototype to a folder iteration-2/design in the GitHub master branch. Offer the POP prototype for your partner group (another team in this course) to conduct the Task 13. Next: Heuristic Evaluation ToDo-list iteration 2 UML use-cases Requirements, usability goals and principles New screen images POP prototype Heuristic evaluation Presentation M2 includeHTML(); "}, "pages/tasks/M2_presentation.html": {"url": "pages/tasks/M2_presentation.html", "title": "Presentation M2", "content": " IPP Presentation M2 Prepare a short presentation on your approach and the corresponding results in the second iteration, including reflections based on the evaluation result. You will demonstrate your methodological findings and your hi-fi paper prototype in 20 minutes (10 minutes presentation and 10 minutes discussion). Please ensure that your presentation does not exceed the alloted time! Don\u2019t necessarily proceed task-by-task, but rather tell a methodological story (why have you chosen certain methods, techniques or tools). Demonstrate the work in progress and formulate questions, you can discuss with the experts in the plenary. Task 10 Exchange the evaluation results between the evaluator and the evaluatee, upload your presentation (.ppt or .pdf) to a folder iteration-2/presentation the GitHub master branch. Next: Frameworks ToDo-list iteration 2 UML use-cases Requirements, usability goals and principles New screen images POP prototype Heuristic evaluation Presentation M2 includeHTML(); "}, "pages/tasks/M3_frameworks.html": {"url": "pages/tasks/M3_frameworks.html", "title": "Frameworks", "content": " IPP Frameworks Guidelines Guidelines generally do not list any context nor specific problem and seem to be a general truth. A guideline is a record of an insight that can be used to guide future design efforts (Schneiderman & Plaisant, 2010, p. 75). Guidelines in general tend to be more specific about the implementation of solutions than design patterns. Some of the most widely known and used guidelines are the iOS and Android's Material Design guideline. It may be tempting to base your choice of design guideline on assumptions about your users. Headlines like \"What kind of user prefers an iPhone?\" suggest there might be fundamental differences. However, academic research is inconclusive. There are some studies finding that users vary in personality traits (e.g. Shaw et al., 2016, Ubhi et al., 2017), whereas other studies with large sample sizes found no significant differences (e.g. G\u00f6tz et al., 2017) Tips: Be precise! Make sure to really follow your chosen framework Reasonably explain deviations from the framework Further reading Chapter 7: From Requirements to Design: The Framework and Refinement by Cooper (2007), book chapter in About Face 3 Material Design by Google Human Interface Guidelines by Apple How To Create a Style Guide From Scratch. Tips and Tricks by Andrei Dorin, online article Choosing a framework for your app There are two ways for you to determine the design language/framework you can use in your app. You can use a predefined styleguide or you can define your own style. Where both approaches have advantages and disadvantages alike, it is your task to make an educated choice and document it properly. The choice of framework/design language strongly influences the interaction patterns your app is going to employ. While we do not require you to use any framework at all, we strongly suggest you use one. Choice of framework is up to you, however a flexible candidate, that incorporates material design, iOS guidelines as well as customization options is Framework 7. When choosing to follow a predefined design language, be precise and make sure to really follow it. Deviations from a chosen language have to be explained reasonably and the observance of your chosen style will be considered during grading. (Some) Strengths and pitfalls Material Design \u00a9 Lonely Traveler, IPP SS17 subtle skeuomorphism simplified physics to support intuitive user understanding dark themes available strongly associated with Google and android devices animations may not work for every user iOS \u00a9 HabbiApp, IPP WS16/17 highly consistent and recognizable visual language iPhone users spend more money on apps and in-app purchases strongly associated with iPhone devices in Germany, iOS only holds 35% of the OS market share Customized design language \u00a9 Skillers, IPP WS16/17 visual language to perfectly suit your app not associated with any other platform or existing app additional work to design new design language not build on several years of user tests and rework Templates Framework 7 Style guide template for Adobe XD by Tyler Wain Style guide template for Figma by SaaS Design Task 11 Discuss your considerations and decisions with your programming tutor. Document your decision process and why you chose which design language on not more than one page in iteration-3/analysis in the GitHub master branch. Next: Style a prototype ToDo-list iteration 3 Design language Styled screen images LoFi Web App Qualitative evaluation Presentation M3 includeHTML(); "}, "pages/tasks/M3_lofiWeb.html": {"url": "pages/tasks/M3_lofiWeb.html", "title": "LoFi Web App", "content": " IPP LoFi Web App Transfer the early stage prototype views to a prototypical lo-fi HTML/CSS/JS application. Focus on the prototypical views of your early stage prototype, add interaction for switching the views (not too much functionality yet). Ensure that you still apply the design (or usability) principles! Add all views you need for matching your scenarios and requirements. Use CSS/JS frameworks as necessary Add style sheets and scripts as external files. Comment them! Test the mobile usage of different application views. By using the phone emulator in Google Chrome. On your smartphones using GitHub.io Task 13 Store your web app in a (public) folder v3 in the GitHub gh-pages branch. Next: Qualitative Evaluation ToDo-list iteration 3 Design language Styled screen images LoFi Web App Qualitative evaluation Presentation M3 includeHTML(); "}, "pages/tasks/M3_presentation.html": {"url": "pages/tasks/M3_presentation.html", "title": "Presentation M3", "content": " IPP Presentation M3 You will present your approach and findings, and demonstate your app (15 min presentation + 5 min discussion) during the next Interaction Prototyping session. Prepare a short presentation on your approach based on the documentations/reports. Demonstrate the work in progress (i.e. your prototype) and formulate questions, you can discuss with the experts in the plenary. Task 15 Upload your presentation (.ppt or .pdf) to a folder iteration-3/presentation the GitHub master branch. Bring your smartphone for the presentation (we'll connect it to a screen), ensure that your web app is available in the (public) folder v3 in the GitHub gh-pages branch. Next: Reflections ToDo-list iteration 3 Design language Styled screen images LoFi Web App Qualitative evaluation Presentation M3 includeHTML(); "}, "pages/tasks/M3_qualitative.html": {"url": "pages/tasks/M3_qualitative.html", "title": "Qualitative Evaluation", "content": " IPP Qualitative Evaluation Some methods to gather qualitative data are: Interviews Focus Groups Diary studies Surveys These methods should all sound familiar to you, as they were discussed in iteration 1 and in the Analysis section. Feel free to revisit that content if you want to! Tips on how to make the most out of your qualitative evaluation Ask the right questions Make sure you ask all the most crucial questions or get all the important answers. Also, in case you are conducting an interview, you may have a list of other less relevant questions to ask if there is time left in an interview. Keep the questions open-ended and bias-free. You don't want to push the participant in any direction, you want an honest evaluation of your idea. If you feel that it's hard purposefully phrasing questions that way, write them down in full sentences beforehand. Take notes efficiently Take note of any direct mention of keywords that are relevant to the prototype or discussions you had in the team. It's always good to have some direct quotes for the evaluation report. Highlight them, e.g. with \u201c...\u201d, to make sure you and your team members recognize them as direct quotes when summarizing and writing the report. Write down anything surprising that does not meet expectation. Don't only think of comments, try to also observe the emotional and non-verbal reaction to certain parts of your prototype. Make sure you don't miss anything important. Don\u2019t be afraid to ask a participant to clarify a statement, if the evaluation takes place with e.g. an interviewer. Additional questions can make an otherwise unusable statement much clearer. Also, don't be afraid to simply ask \"Why?\". Remind yourself that understanding the participant's view on your prototype is what matters most! If the participants asks you directly about a feature of your prototype, take the opportunity to not answer straight away but to answer with another question \"Would you appreciate to have that feature?\"/\"What do you expect to happen if you were to press that button?\". Afterwards, you can of course give the participant a clear answer about how you envisioned the prototype to work. It can be quite helpful to record participant\u2019s voice and/or behavior. That way, you can for example focus on just asking questions and observing non-verbal cues and write down the participant's comments later with the help of the recording. Alternatively, you can also just record in case your notes are not enough to understand an issue and you and your team want to revisit the context of a statement. Evaluating your prototype In this iteration, conduct a qualitative evaluation of your prototype (either the web app or the visual prototype, you decide which to pick!) with 2-5 participants based on your user scenarios and test cases. Define criteria for your evaluation. Document/record the test in a suitable way (photos, log, etc.). For inspiration, read Chapter 7 (\"Usability Assessment Methods beyond Testing\") in Nielsen (1993), or Chapter 4 (\"Evaluating Interface Designs\") in Shneiderman and Plaisant (2005). Write/draw a very brief evaluation report on 1 single page, summarizing the documented evaluation. Describe your evaluation approach in a schematic manner: include your test cases, participant pool, identified problems & suggestions, etc. as well as your interpretations. Further reading Designing the User Interface Chapter 4: Evaluating Interface Designs by Ben Shneiderman & Catherine Plaisant, book chapter Usability Engineering Chapter 7: Usability Assessment Methods beyond Testing by Jakob Nielsen, book chapter Task 14 Upload your evaluation report to a folder iteration-3/evaluation on the GitHub master branch. Next: Presentation M3 ToDo-list iteration 3 Design language Styled screen images LoFi Web App Qualitative evaluation Presentation M3 includeHTML(); "}, "pages/tasks/M3_style_prototype.html": {"url": "pages/tasks/M3_style_prototype.html", "title": "Style a prototype", "content": " IPP Style a prototype Using the design language from Task 11, redesign your paper prototype accordingly. The obtained results should have a high graphical fidelity and resemble the goal for your final design. These screens can best be designed using graphical software like the ones presented in Task . Tools Tips & tricks for styling your prototype Look for templates of common UI elements and patterns Find inspiration looking at other public projects designed with the tool of your choice Not every detail has to be completely covered - include short texts to explain why option is not yet available Choosing colors In web design, the used color scheme is a so-called \"additive\" one. This means that by combining multiple colors, the resulting color is determined by adding up the wavelengths. This is reflected in the RGB and hex values, which are some of the most commonly used color systems in front-end programming. \"RGB\" stands for \"Red, Green, Blue\", those are the colors represented in the pixels on your screen. Each value for the three colors ranges from \"0,0,0\" (black) to \"255,255,255\" (white). Sometimes you will see a fourth value, which determines the transparency of the color. The hex color code simply results from transforming the RGB value into a hexadecimal value. Now, if you intend to pick amazing colors for your web app, it would be a good idea to visualize all colors systematically, e.g. in a color wheel, in order to make an educated decision about which colors to pick. The colors that you can typically see in a wheel like the one below will most likely just vary in their hue. Here are some approaches to determine appealing color combinations for your visual design: Monochrome Easy to find appealing color combination Try keeping the hue value as it is, increase saturation and decrease brightness. Example: Qatar Airways Complementary Opposite colors elicit high contrast Elements pop out and can be identified easily Contrast needs to be used in a meaningful way Example: Panicstudio TV Analogous Nearby colors have low contrast Good choice for banners and website backgrounds Example: Clear Todo App Triadic Playful color scheme To keep balance, choose one dominant and two accent colors Example: Superman logo Final few tips: If you need inspiration, explore color schemes in images of the physical world or venture out yourself and figure out which colors typically seem to \"go together\" in your environment or the surroundings your web app will be used in! Also, never forget to check accessibility criteria, e.g. does your font size and color make the text on your app readable enough? Further reading All you need to know about colors in UI Design by Christian Vizcarra, blog article Color in UI Design: A (Practical) Framework by Erik Kennedy, blog article Color Theory: Brief Guide For Designers by Tubik Studio, blog article Color tools Color wheel by Adobe, website Color calculator by sessionscollege, website Color palettes by coolors, website Task 12 Document at least 3 example screens following the new style as images in iteration-3/design in the GitHub master branch. Next: LoFi Web App ToDo-list iteration 3 Design language Styled screen images LoFi Web App Qualitative evaluation Presentation M3 includeHTML(); "}, "pages/tasks/M4_hifiWeb.html": {"url": "pages/tasks/M4_hifiWeb.html", "title": "HiFi Web App", "content": " IPP HiFi Web App This time, you'll seamlessly upgrade your HTML lo-fi model to a hi-fi HTML application: If possible, get information for the data elements dynamically, e.g. using APIs. A list of web APIs is available on ProgrammableWeb. Link the data elements to functional elements (i.e. make your application dynamic). Implement the interaction. Implement the visual appearance to match your defined style (and the guidelines). Finalize your prototype to be deliverable and testable. Clean up your application code (HTML, CSS, JS) and check your comments concerning their understandability for the upcoming code review. Resources API ProgrammableWeb Public API Index API list Google APIs Task 18 Important: Ensure that you address all the grading criteria described in the expectations, requirements and grading section above. Notice: It is strongly recommended that you comment your code and make your code as understandable as possible for our review. However, the usability and functionality of the application has a higher priority than the readability of your code. Remember, this is about an interactive prototype. Store your web app in a (public) folder v4 in the GitHub gh-pages branch. Next: Quantitative Evaluation ToDo-list iteration 4 Reflections Improving Web App Preparation quantitative evaluation Presentation M4 includeHTML(); "}, "pages/tasks/M4_improving_interactions.html": {"url": "pages/tasks/M4_improving_interactions.html", "title": "Improving interactions", "content": " IPP Improving interactions Transfer Coopers interaction framework. Apply your definitions (including patterns/guidelines) above to the web technologies HTML5/CSS3/JS: First, model the prototypical structure/hierarchy (in HTML), the data elements (as JS objects), the functional elements and input methods (e.g. HTML5 forms, jQuery UI components, ...). Second, model a rough prototypical sketch of key path scenarios (e.g. navigating the hierarchy) using jQuery. Third, design the visual appearance of your application in reusable and hierarchical CSS3 classes. Next: HiFi Web App ToDo-list iteration 4 Reflections Improving Web App Preparation quantitative evaluation Presentation M4 includeHTML(); "}, "pages/tasks/M4_presentation.html": {"url": "pages/tasks/M4_presentation.html", "title": "Presentation M4", "content": " IPP Presentation M4 Prepare a short presentation (15 min presentation + 5 min discussion) on your approach, which includes the demonstration of the final prototype and presentation of experiment design. Task 20 Bring the app, measuring equipment, questionnaires, etc. to the lecture. Be prepared to discuss your app and evaluation methods! Deadline Important Deadline: After the presentation, you still have to fine-tune and finalize your prototype based on the feedbacks. Afterwards, your GitHub repository will be freezed, and no change will be taken into the final evaluation. Tips: don't be demotivated by the imperfection of your prototype, it is still a prototype at this freezing point. For all team members, please move on and be consentrated on the final evaluation. Next: Final Evaluation ToDo-list iteration 4 Reflections Improving Web App Preparation quantitative evaluation Presentation M4 includeHTML(); "}, "pages/tasks/M4_quantitative.html": {"url": "pages/tasks/M4_quantitative.html", "title": "Quantitative Evaluation", "content": " IPP Quantitative Evaluation Experimental requirements: Hypotheses, test cases and metrics Read chapter six (\"Usability Testing\") in Nielsen's Usability Engineering (1993). Prepare requirements for a quantitative and summative evaluation. Hypotheses State goals and derive hypotheses that you want to test (e.g. \"completing task x with the prototype is faster than with off-the-shelf software\", \"the prototype achieves at least a rating of x\", \"the performance for fulfilling the task will be x %\" etc.). The hypotheses should be in line with your functional and usability requirements. A good introduction on creating theories and deriving hypotheses is given in Field (2009). You must be able to explain, why you chose a certain hypothesis (including any predefined values). The easiest way to do so is by referencing relevant literature. Test cases Derive the test cases (tasks), from your use cases. Subjects will need to fulfill the test cases in order to reject/prove your hypotheses (some hints on test scenarios are given on usability.gov). Metrics Nielsen's (2012) post on User Satisfaction vs. Performance Metrics and refer to \"Performance Measurement\" (Nielsen, 1993, chapter 6.7). Define objective measures (obtained by logging parameters) such as reaction time, time to perform a task, number of errors, number of interaction steps, etc. Additionally, define subjective measures. Design or use an existing short questionnaire that uses scales to analyze the product (a list of questionnaires can be found on usabilitynet.org, another list of usability and user experience surveys is available from unige.ch, further questionnaires can be found on measuringu.com). Experimental design: Plan and prepare a quantitative (summative) evaluation Please operationalize your hypothesis using the metrics. Define quantitative criteria for assessing your prototype subjectively and objectively. Prepare the experimental setup for your summative evaluation. Design the experimental procedure. Setup the data acquisition (direct in-app logging, observation, record, ...). Test the setup, procedure and data acquisition. Further reading Usability Engineering Chapter 6: Usability Testing by Jakob Nielsen, book chapter Discovering statistics using IBM SPSS statistics by Andy Field, book Mobile Device Testing by usability.gov, online article User Satisfaction vs. Performance Metrics by Jakob Nielsen, online article Questionnaires Usability and user experience surveys by edutech wiki, website Various UX questionnaires by MeasuringU, website SUS by Brooke (1996) ISO 9241-10 by Pr\u00fcmper (1997) AttrakDiff 2 by Hassenzahl, Burmester & Koller (2003) UEQ by Schrepp, Hinderks & Thomaschewski (2017) Emotrack by Garcia & Hammond (2016) LEMtool by Huisman et al. (2013) Task 19 Summarize hypotheses, test cases and metrics in a brief report in the folder iteration-4/preparation on the GitHub master branch. Upload a photo of the setup, as well as a brief listing of the quantitative criteria and the procedure to a folder iteration-4/preparation on the GitHub master branch. Next: Presentation M4 ToDo-list iteration 4 Reflections Improving Web App Preparation quantitative evaluation Presentation M4 includeHTML(); "}, "pages/tasks/M4_reflections.html": {"url": "pages/tasks/M4_reflections.html", "title": "Reflections", "content": " IPP Reflections Analyse the results of the qualitative evaluation in iteration 3, work out positive points to keep working on and the negative points to be improved. Compare those Todos with the planned goal of your application, decide what are exactly to be implemented/improved. Task 16 Document your decision process briefly on not more than one page in iteration-4/analysis in the GitHub master branch. Next: Improving interactions ToDo-list iteration 4 Reflections Improving Web App Preparation quantitative evaluation Presentation M4 includeHTML(); "}, "pages/tasks/M5_evaluation.html": {"url": "pages/tasks/M5_evaluation.html", "title": "Final Evaluation", "content": " IPP Final Evaluation Evaluation: Data collection for the quantitative evaluation Collect data from at least 10 persons depicting your target group (relatives, friends, fellow students, etc.). Store the acquired data in a suitable manner. Analysis: Statistical analysis of the quantitative evaluation Please format your data for analysis in the statistical tool of your choice (Excel/JMP/R/SPSS). SPSS is available on computers located in the ergonomics department (LfE). To create an LfE account, required to use the LfE computers, contact the LfE Technical Support Team. Perform a statistical analysis and reject or accept your hypothesis (a good overview on statistical analyses is given in Field, 2009). Make sure you check the assumptions of the tests before using them. Express the results in the best way for the audience of your final presentation. Use APA 7-style diagrams (or tables) for this purpose and interpret your results with regards to your hypotheses and functional as well as usability requirements. Include your results' implications for your design. Further reading APA 7 Basics Tutorial by APA Style, website Discovering Statistics using SPSS by Andy Fields, book Task 21 Upload the data set to a folder final_evaluation/data in the GitHub master branch. Upload the analysis in a folder final_evaluation/analysis in the GitHub master branch. Next: Final Presentation ToDo-list final iteration Evaluation data Evaluation analysis Final presentation includeHTML(); "}, "pages/tasks/M5_presentation.html": {"url": "pages/tasks/M5_presentation.html", "title": "Final Presentation", "content": " IPP Final Presentation Please prepare a presentation for the final presentation, which should include the whole methodological prototyping process that you used. Design the presentation for new stakeholders (i.e. usability experts, evaluators, professors, ...) that do not know your methodological process yet. Focus on the iterative user centered design process. It is important to motivate the evaluation methods, the results, as well as design improvements. Provide both an overview (all the methodological steps) and some highlights (details on chosen techniques/tools, important results, well-chosen design improvements). Your presentation should contain: motivations both for the application and the iterations (users, goals, requirements, ...) an overview of your process iterations (used methods, prototyping tools, evaluations, final application views) well chosen exemplary details regarding evaluation results and design improvements discussions/conclusions of the iterations During the presentation (exactly 15 minutes!) you will give a short explanation of your overall work (10 minutes) and demonstrate the mobile application (5 minutes). Ensure that each group member presents. Be prepared to answer additional questions afterwards (approx. 5 minutes). Grading Ensure that you address all the methodological grading criteria described in the Expectations section. Creative Presentation designs and styles are highly encouraged. The only requirement are the TUM-Logo in the top right corner of the presentation as well as slide-numbers (for an easier discussion). Apply the APA 7 guidelines for formatting figures, tables, and statistics (a summarized styleguide can be found on the institute's website). But keep in mind, that you're going to present an iterative process, so you need to transform the common (APA 7) structure (\"introduction\", \"method\", \"results\", \"discussion\", \"conclusion\"). Altogether, you need to combine the scientific and the iterative design process to present your methods and results. Further reading APA 7 Tutorials by APA Style, website Styleguide f\u00fcr Studienarbeiten by TUM Task 22 Upload your presentation (.pdf) to a folder iteration-5/presentation the GitHub master branch. Bring your smartphone for the presentation ensure that the latest version of your web app is available in the (public) folder v5 in the GitHub gh-pages branch. It might be helpful to create backup slides with the documents/reports created during the analysis, design and evaluation phases as supplementary material for questions emerging during your presentation. ToDo-list final iteration Evaluation data Evaluation analysis Final presentation includeHTML(); "}, "pages/theory/analysis.html": {"url": "pages/theory/analysis.html", "title": "Analysis", "content": " IPP Analysis Before you judge users, walk a mile in their shoes Goal-directed design What the Goal-Directed Design process does is provide a problem knowing process. What problem are you solving and what are the salient parts of the problem? What is really critical? We will take a closer look at the first four steps later for the \"Analysis\" tasks. Feel free to already discover more about the methods: Research and interviews Goals and design principles Frameworks Reflections Mental Models Mental models can be discovered by interviewing potential users applying the Thinking-Aloud technique, as you will do for an assignment in iteration 1. Further reading \"Inside Goal-Directed Design: A Two-Part Conversation With Alan Cooper\" by Caroline Kraus, interview \"Mental Models\" by Jakob Nielsen, online article \"6 Examples of Context of Use\" by John Spacey, online article Next: Design includeHTML(); "}, "pages/theory/design.html": {"url": "pages/theory/design.html", "title": "Design", "content": " IPP Design Visualize your idea and your thinking There are three responses to a piece of design\u2013 yes, no, and WOW! Wow is the one to aim for. Further reading Interaction Design Basics by usability.gov, online article 10 amazing examples of interaction design by Emily Esposito, online article Usability Usability rules the Web. Simply stated, if the customer can't find a product, then he or she will not buy it. User Experience Further reading The 20 UX tips you need to know by Jamie Shanks, online article Processing Levels We will take a closer look at designing for several tasks. Feel free to already discover more about the methods: First sketch From LoFi to HiFi Style a prototype Improving interactions Next: Implementation includeHTML(); "}, "pages/theory/implementation.html": {"url": "pages/theory/implementation.html", "title": "Implementation", "content": " IPP Implementation Bring your idea to life! Further reading \"UX Prototypes: Low Fidelity vs. High Fidelity\" by Kara Pernice, online article \"Rapid prototyping Google Glass - Tom Chi\" by TED-ed, video Prototyping Dimensions We will take a closer look at implementation for several tasks. Feel free to already discover more about the methods: Paper Prototyping HiFi Prototyping LoFi Web App HiFi Web App Next: Evaluation includeHTML(); "}, "pages/theory/evaluation.html": {"url": "pages/theory/evaluation.html", "title": "Evaluation", "content": " IPP Evaluation Don\u2019t fall in love with your prototype The goal of a designer is to listen, observe, understand, sympathize, empathize, synthesize, and glean insights that enable him or her to make the invisible visible. We will take a closer look at evaluation for several tasks. Feel free to already discover more about the methods: Thinking Aloud Heuristic Evaluation Qualitative Evaluation Quantitative Evaluation Final Evaluation Next: Research and interviews includeHTML(); "}}
